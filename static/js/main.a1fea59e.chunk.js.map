{"version":3,"sources":["components/Top.js","components/Bottom.js","components/House.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["Top","react_default","a","createElement","Fragment","className","src","alt","Bottom","role","aria-labelledby","House","props","_useState","useState","_useState2","Object","slicedToArray","open","setOpen","_useState3","_useState4","loading","setLoading","_useState5","_useState6","message","setMessage","id","imgSrc","_useState7","price","_useState8","ipData","setIpData","_useState9","_useState10","address","setAddress","_useState11","_useState12","account","setAccount","_useState13","_useState14","homeContract","setHomeContract","_useState15","_useState16","trade","setTrade","_useState17","_useState18","house","setHouse","_useState19","_useState20","owner","setOwner","_useState21","_useState22","sell","setSell","_useState23","_useState24","data","setData","_loadWeb","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","window","ethereum","web3","Web3","enable","currentProvider","alert","stop","apply","this","arguments","_loadBlockchainData","_callee2","networkId","homeData","hdc","hd","onr","tradeData","trc","ifs","amount","_context2","eth","getAccounts","then","res","catch","err","net","getId","sent","Home","networks","Contract","abi","methods","homes","call","name","regNo","regNumber","toString","addr","propertyAddress","area","year","floors","numberOfFloors","rooms","numberOfRooms","ownerOf","Trade","homeList","utils","fromWei","forSell","useEffect","loadWeb3","loadBlockchainData","Modal","closeIcon","onClose","onOpen","trigger","width","Header","Content","image","Image","size","wrapped","Description","Actions","Input","placeholder","value","onChange","event","_event$target","target","prevIpData","objectSpread","defineProperty","Button","color","onClick","etherAmount","toWei","approve","send","from","once","confirmation","listHome","location","reload","on","error","buyHome","Main","components_House","App","components_Top","components_Main","components_Bottom","Boolean","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a1fea59e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Top(){\r\n    return(\r\n        <>\r\n        <img className=\"top-cloud\" src=\"images/cloud.png\" alt=\"cloud\" />\r\n        <div className=\"title-text\">\r\n        <h1>Home Chain</h1>\r\n        <h2>a token for real world assets.</h2>\r\n        </div>\r\n        <img className=\"bottom-cloud\" src=\"images/cloud.png\" alt=\"cloud\" />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Top;","import React from \"react\";\r\n\r\nfunction Bottom(){\r\n    return(\r\n    <div className=\"bottom-container\">\r\n      <p className=\"copyright\"> made with <span role=\"img\" aria-labelledby=\"love\">❤️</span> @ unblocktechie </p>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Bottom;","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Image, Modal, Input, Header } from 'semantic-ui-react';\r\nimport Home from '../abis/Home.json';\r\nimport Trade from '../abis/Trade.json';\r\nimport Web3 from 'web3';\r\n\r\nfunction House(props){   \r\n    const [open, setOpen] = useState(false);\r\n    const [loading,setLoading] = useState(false);\r\n    const [message,setMessage] = useState(\"\");\r\n    const id = props.id;\r\n    const imgSrc = \"images/home-\"+props.id+\".png\";\r\n    const [ipData, setIpData] = useState({price : \"\" });\r\n    let [address,setAddress] = useState(\"\");\r\n\r\n    let [account, setAccount] = useState(\"\");\r\n    const [homeContract, setHomeContract] = useState({});\r\n    const [trade, setTrade] = useState({});\r\n\r\n    let [house, setHouse] = useState({});\r\n    let [owner, setOwner] = useState(\"\");\r\n    const [sell, setSell] = useState({});\r\n    const [data,setData] = useState(false);\r\n\r\n    async function loadWeb3() {\r\n        if (window.ethereum) {\r\n          window.web3 = new Web3(window.ethereum)\r\n          await window.ethereum.enable()\r\n        }\r\n        else if (window.web3) {\r\n          window.web3 = new Web3(window.web3.currentProvider)\r\n        }\r\n        else {\r\n          window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\r\n        }\r\n    }\r\n  \r\n\r\n    async function loadBlockchainData(){\r\n        const web3 = window.web3;\r\n       \r\n            web3.eth.getAccounts()\r\n            .then(res=>{\r\n                setAccount(res[0]);\r\n            })\r\n            .catch(err=>{\r\n                setMessage(\"please select your ethereum account\");\r\n            })  \r\n          \r\n        const networkId = await web3.eth.net.getId();\r\n        \r\n        const homeData = Home.networks[networkId];\r\n            if(homeData) {\r\n                const hdc = new web3.eth.Contract(Home.abi, homeData.address);\r\n                setHomeContract(hdc);\r\n\r\n                const hd = await hdc.methods.homes(id-1).call();\r\n                setHouse({\r\n                        name:hd.name,\r\n                        regNo:hd.regNumber.toString(),\r\n                        addr:hd.propertyAddress,\r\n                        area:hd.area.toString(),\r\n                        year:hd.year.toString(),\r\n                        floors:hd.numberOfFloors.toString(),\r\n                        rooms:hd.numberOfRooms.toString()\r\n                    }); \r\n                setData(true);\r\n                const onr = await hdc.methods.ownerOf(id).call();\r\n                setOwner(onr);\r\n\r\n            } else {\r\n              setMessage('Home contract not deployed to detected network. Please select Ropsten Test Network. ');\r\n            }\r\n        \r\n            const tradeData = Trade.networks[networkId];\r\n            if(tradeData) {\r\n                const trc = new web3.eth.Contract(Trade.abi, tradeData.address);\r\n                setAddress(tradeData.address);\r\n                setTrade(trc);\r\n\r\n                const ifs = await trc.methods.homeList(id).call();\r\n                let amount = web3.utils.fromWei(ifs.price.toString(),'Ether');\r\n                setSell({forSell:ifs.forSell, price:amount});\r\n            } else {\r\n              setMessage('Trade contract not deployed to detected network. Please select Ropsten Test Network.');\r\n            }       \r\n    } \r\n      \r\n        useEffect(() => {\r\n          loadWeb3();  \r\n          loadBlockchainData();\r\n        },[])\r\n\r\n    function handleChange(event) {\r\n        const { name, value } = event.target;  \r\n            setIpData(prevIpData => {\r\n              return {\r\n                ...prevIpData,\r\n                [name]: value\r\n              };\r\n            });\r\n    }      \r\n    \r\n    function listHome(){\r\n        setLoading(true);\r\n        let etherAmount;\r\n        etherAmount = ipData.price.toString();\r\n        etherAmount = window.web3.utils.toWei(etherAmount, 'Ether');\r\n\r\n        homeContract.methods.approve(address,id).send({from:account})\r\n        .once('confirmation',((confirmation)=>{\r\n            trade.methods.listHome(id, etherAmount).send({from:account})\r\n            .once('confirmation',(confirmation)=>{\r\n                window.alert(\"Home successfully listed for sell\");\r\n                setLoading(false);\r\n                window.location.reload();\r\n            })\r\n            .on('error',(error)=>{\r\n                setMessage(\"something went wrong. please try again.\");\r\n                setLoading(false);\r\n            });\r\n        }))\r\n        .on('error',(error)=>{\r\n            setMessage(\"something went wrong. please try again.\");\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    function buyHome(){\r\n        setLoading(true);\r\n        const etherAmount = window.web3.utils.toWei(sell.price, 'Ether');\r\n        trade.methods.buyHome(id).send({value:etherAmount , from:account})\r\n        .once('confirmation', (confirmation) => {\r\n          setLoading(false);\r\n          window.alert(\"transaction successful.\");\r\n          window.location.reload();\r\n        })\r\n        .on('error', (error) => {\r\n            setMessage(\"Transaction failed. Try again!\");\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n      <Modal\r\n        closeIcon\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        trigger={<img className=\"mountain\" src={imgSrc}  width =\"15%\" alt=\"house-img\" />}\r\n      >\r\n        <Modal.Header> {house.name} </Modal.Header>\r\n        <Modal.Content image>\r\n          <Image size='medium' src={imgSrc} wrapped />\r\n          <Modal.Description>\r\n            {loading?\r\n            <Header>loading...please wait...It may take 5-10 minutes...</Header>\r\n            :<Header>{message}</Header>\r\n            }\r\n            {(data)&&(<>  \r\n            <p><b>Registration Number : </b> {house.regNo} </p>\r\n            <p><b>Owner : </b> {owner} </p>\r\n            <p><b>Address : </b> {house.addr} </p>\r\n            <p><b>Area : </b> {house.area} square yard </p>\r\n            <p><b>Year : </b> {house.year} </p>\r\n            <p><b>Number of floors : </b> {house.floors} </p>\r\n            <p><b>Number of rooms : </b> {house.rooms} </p></>)\r\n            }\r\n            {sell.forSell&&<p><b>Price : </b> {sell.price} ETH </p>}\r\n          </Modal.Description>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n        {(account===owner)?\r\n                <>\r\n                <Input placeholder='Add price in ETH'\r\n                    name='price'\r\n                    value={ipData.price}\r\n                    onChange={handleChange} />\r\n                <Button color='red' onClick={listHome}>\r\n                    List for Sell \r\n                </Button>\r\n                </>\r\n        :(sell.forSell)?<Button color='red' onClick={buyHome}>\r\n                        Buy @ {sell.price} ETH\r\n                        </Button>\r\n        :<Button color=\"black\" onClick={() => setOpen(false)}>Not for sell</Button>        \r\n        }\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default House;","import React from \"react\";\r\nimport House from \"./House\";\r\n\r\nfunction Main(){\r\n\r\n    return(\r\n        <>\r\n        <div className=\"home-image\">\r\n        <House id = \"1\" />\r\n        <House id = \"2\" />\r\n        <House id = \"3\" />\r\n        <House id = \"4\" />\r\n        <House id = \"5\" />\r\n        </div>  \r\n        <img className=\"line\" src=\"images/line.png\"  width =\"100%\" alt=\"line\" />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from \"react\";\r\nimport Top from \"./Top\";\r\nimport Bottom from \"./Bottom\";\r\nimport Main from \"./Main\";\r\n\r\nfunction App(){\r\n\r\n  return(\r\n    <>\r\n    <div className=\"top-container\">\r\n      <Top />\r\n      <Main />\r\n    </div>\r\n    <Bottom />\r\n  </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}